# Title: Portainer
# Description: A lightweight Docker management UI.

version: '3'

services:
  portainer:
    image: portainer/portainer-ce:2.20.1-alpine
    container_name: portainer
    restart: always
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:9000"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - proxy
    # ports:
    #   - 9000:9000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DIR_DATA}:/data
    labels:
      # Traefik 2.0
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      # router: portainer-frontend
      - "traefik.http.routers.portainer-frontend.entrypoints=https"
      - "traefik.http.routers.portainer-frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.portainer-frontend.middlewares=secured@file"
      - "traefik.http.routers.portainer-frontend.service=portainer-frontend"
      - "traefik.http.routers.portainer-frontend.tls=true"
      - "traefik.http.routers.portainer-frontend.tls.certresolver=${CERT_RESOLVER}" # staging or production
      # router: portainer-edge
      # - "traefik.http.routers.portainer-edge.entrypoints=https"
      # - "traefik.http.routers.portainer-edge.rule=Host(`${DOMAIN}`)"
      # - "traefik.http.routers.portainer-edge.service=portainer-edge"
      # - "traefik.http.routers.portainer-edge.tls=true"
      # - "traefik.http.routers.portainer-edge.tls.certresolver=${CERT_RESOLVER}" # staging or production
      # service: portainer
      - "traefik.http.services.portainer-frontend.loadbalancer.server.port=9000"
      # - "traefik.http.services.portainer-edge.loadbalancer.server.port=8000"
      # Homepage Dashboard
      - homepage.group=Management
      - homepage.name=Portainer
      - homepage.icon=portainer
      - homepage.href=https://${DOMAIN}
      - homepage.description=Docker Management UI
      - homepage.weight=10

networks:
  proxy:
    external: true
