# Title: treafik
# Description: Reverse Proxy and Load Balancer with Traefik

version: '3'

services:
  traefik:
    image: traefik:v2.11.0
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${FILE_TRAEFIK_CNF_EXTRA}:/traefik_extra.yml:ro
      - ${FILE_ACME}:/acme.json
      - ${DIR_AUTH}:/certs/auth
    command:
      # log
      # By default, the level is set to ERROR. Alternative logging levels
      # are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
      - "--log=true"
      - "--log.level=ERROR"
      # - "--log.filePath=/traefik.log"
      # api
      - "--api=false"
      - "--api.dashboard=false"
      - "--api.debug=false"
      # entryPoints
      # entryPoints.http
      - "--entrypoints.http.address=:80"
      - "--entrypoints.http.http.redirections.entryPoint.to=https"
      - "--entrypoints.http.http.redirections.entryPoint.scheme=https"
      # entryPoints.https
      - "--entrypoints.https.address=:443"
      # serversTransport
      - "--serversTransport.insecureSkipVerify=true"
      # providers
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file.filename=/traefik_extra.yml"
      # certificatesResolvers
      # certificatesResolvers.staging
      - "--certificatesResolvers.staging.acme.email=${EMAIL}"
      - "--certificatesResolvers.staging.acme.storage=/acme.json"
      - "--certificatesResolvers.staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.staging.acme.dnsChallenge.provider=cloudflare"
      - "--certificatesResolvers.staging.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
      # certificatesResolvers.production
      - "--certificatesResolvers.production.acme.email=${EMAIL}"
      - "--certificatesResolvers.production.acme.storage=/acme.json"
      - "--certificatesResolvers.production.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.production.acme.dnsChallenge.provider=cloudflare"
      - "--certificatesResolvers.production.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
#    labels:
#      - "traefik.enable=true"
      # router: traefik
#      - "traefik.http.routers.traefik.entrypoints=https"
#      - "traefik.http.routers.traefik.rule=Host(`${DOMAIN_TRAEFIK}`)"
#      - "traefik.http.routers.traefik.middlewares=traefik-auth,sslheader,default-whitelist@file"
#      - "traefik.http.routers.traefik.service=api@internal"
#      - "traefik.http.routers.traefik.tls=true"
#      - "traefik.http.routers.traefik.tls.certresolver=staging" # production
      # middleware: traefik-auth
#      - "traefik.http.middlewares.traefik-auth.basicauth.usersFile=/certs/auth/traefik_usersfile"
      # middleware: sslheader
#      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"

networks:
  proxy:
    external: true