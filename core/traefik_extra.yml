http:
  routers:
    truenas:
      entryPoints:
        - https
      rule: "Host(`truenas.pixelstack.live`)"
      middlewares:
        - secured
      tls:
        certResolver: "production"
      service: "truenas"

  services:
    truenas:
      loadBalancer:
        servers:
          - url: "https://192.168.0.13:8081"
    omadactl:
      loadBalancer:
        servers:
          - url: "https://192.168.0.13:8043"
    pihole:
      loadBalancer:
        servers:
          - url: "http://192.168.0.11:8084"
    wg-portal:
      loadBalancer:
        servers:
          - url: "http://192.168.0.11:8888"

  middlewares:
    default-headers:
      headers:
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        referrerPolicy: same-origin
        contentSecurityPolicy: "default-src 'none'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' https: data:; connect-src 'self' https:; frame-src 'self' https:; media-src 'self' https:; object-src 'none'; frame-ancestors 'self'; base-uri 'self'; form-action 'self';"
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    authentik:
        forwardAuth:
            address: http://authentik:9000/outpost.goauthentik.io/auth/traefik
            trustForwardHeader: true
            authResponseHeaders:
                - X-authentik-username
                - X-authentik-groups
                - X-authentik-email
                - X-authentik-name
                - X-authentik-uid
                - X-authentik-jwt
                - X-authentik-meta-jwks
                - X-authentik-meta-outpost
                - X-authentik-meta-provider
                - X-authentik-meta-app
                - X-authentik-meta-version

    default-whitelist:
      ipAllowList:
        sourceRange:
          - "10.0.0.0/8"
          - "192.168.0.0/16"
          - "172.16.0.0/12"

    secured:
      chain:
        middlewares:
          - default-whitelist
          - default-headers

tls:
  options:
    default:
      sniStrict: true
      minVersion: "VersionTLS12"
      curvePreferences:
        - "secp521r1"
        - "secp384r1"
      cipherSuites:
        - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
        - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
        - "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
        - "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
    mintls13:
      minVersion: "VersionTLS13"

#tcp:
#  middlewares:
#    default-whitelist:
#      ipAllowList:
#        sourceRange:
#          - "10.0.0.0/8"
#          - "192.168.0.0/16"
#          - "172.16.0.0/12"
