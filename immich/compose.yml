# Title: immich
# Description: Photo and video management

services:
  postgresql:
    container_name: postgresql-immich
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:bcf63357191b76a916ae5eb93464d65c07511da41e3bf7a8416db519b40b1c23
    restart: always
    networks:
      - backend
    # ports:
    #   - 5432:5432  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    environment:
      POSTGRES_DB: ${DB_NAME:-immich}
      POSTGRES_USER: ${DB_USER:-immich}
      POSTGRES_PASSWORD: ${DB_PASS:?database password required}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${DIR_DATA}/db-data:/var/lib/postgresql/data
    shm_size: 128mb

  valkey:
    image: valkey/valkey:8.1.3-alpine
    container_name: valkey-immich
    command: --save 60 1 --loglevel warning
    restart: always
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s

  immich:
    image: ghcr.io/immich-app/immich-server:v1.142.0
    container_name: immich
    restart: always
    depends_on:
      - postgresql
      - valkey
    networks:
      - proxy
      - backend
    # ports:
    #   - '2283:2283'
    environment:
      TZ: ${TZ:-Europe/Berlin}
      DB_HOSTNAME: postgresql
      DB_USERNAME: immich
      DB_PASSWORD: ${DB_PASS}
      DB_DATABASE_NAME: immich
      REDIS_HOSTNAME: valkey
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ${DIR_IMAGES}:/data
      - /etc/localtime:/etc/localtime:ro
    labels:
      # Traefik 3.0
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      # router: immich
      - "traefik.http.routers.immich.entrypoints=https"
      - "traefik.http.routers.immich.rule=Host(`${DOMAIN_IMMICH:-immich.pixelstack.live}`)"
      - "traefik.http.routers.immich.middlewares=secured@file"
      - "traefik.http.routers.immich.service=immich"
      - "traefik.http.routers.immich.tls=true"
      - "traefik.http.routers.immich.tls.certresolver=${CERT_RESOLVER:-production}" # staging or production
      # service: immich
      - "traefik.http.services.immich.loadbalancer.server.port=2283"

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:v1.142.0-openvino
    container_name: immich-machine-learning
    restart: always
    networks:
      - backend
    device_cgroup_rules:
      - 'c 189:* rmw'
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ${DIR_DATA}/ml-cache:/cache
      - /dev/bus/usb:/dev/bus/usb

networks:
  proxy:
    external: true
  backend: {}
